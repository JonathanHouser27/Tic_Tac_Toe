#include <iostream>
#include <ctime>
#include <string>
#include <iostream>

// declare functions prior to main, and write after for ease of reading
void drawBoard(char *spaces);
void playerMove(char *spaces, char player);
void computerMove(char *spaces, char computer);
bool checkWinner(char *spaces, char player, char computer);
bool checkTie(char *spaces);
std::string getPlayerName();
std::string getComputerName();

// main function to run the game
int main(){
    // creating array for the chess board
    char spaces[9] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};
    // set player and computer name
    char player = 'X';
    char computer = 'O';
    bool running = true;

    drawBoard(spaces);
    
    while(running){
        playerMove(spaces, player);
        drawBoard(spaces);
        if(checkWinner(spaces, player, computer)){
            running = false;
            break;
        }
        else if(checkTie(spaces) && running == true){
            running = false;
            break;
        }
        
        computerMove(spaces, computer);
        drawBoard(spaces);
        if(checkWinner(spaces, player, computer)){
            running = false;
            break;
        }
        else if(checkTie(spaces) && running == true){
            running = false;
            break;
        }
    }
    return 0;
}

// function to draw the board and will place marks where directed and redraw the board
void drawBoard(char *spaces) {
    std::cout << '\n';
    std::cout << "     |     |     " << '\n';
    std::cout << "  " << spaces[0] << "  |  " << spaces[1] << "  |  " << spaces[2] << "  " << '\n';
    std::cout << "_____|_____|______" << '\n';
    std::cout << "     |     |     " << '\n';
    std::cout << "  " << spaces[3] << "  |  " << spaces[4] << "  |  " << spaces[5] << "  " << '\n';
    std::cout << "_____|_____|______" << '\n';
    std::cout << "     |     |     " << '\n';
    std::cout << "  " << spaces[6] << "  |  " << spaces[7] << "  |  " << spaces[8] << "  " << '\n';
    std::cout << "     |     |     " << '\n';

    std::cout << '\n';

}

// function to prompt the user to select a space and verifies the space is valid
void playerMove(char *spaces, char player){
    int number;
    do{
        std::cout << "Enter a spot to place a marker(1-9)";
        std::cin >> number;
        number--; // because array starts at 0
        if(spaces[number] == ' '){
            spaces[number] = player;
            break;
        }
    }while(!number > 0 || !number < 8);
}

// function that randomly pick an open space for the computer
void computerMove(char *spaces, char computer){
    int number;
    srand(time(0));
    
    while(true){
        number = rand() % 9;
        if(spaces[number] == ' '){
            spaces[number] = computer;
            break;
        }
    }
}

// function to check if there is a winner, or if the game should continue
bool checkWinner(char *spaces, char player, char computer){
    int winConditions[8][3] = {
        {0,1,2}, {3,4,5}, {6,7,8},  // Rows
        {0,3,6}, {1,4,7}, {2,5,8},  // Columns
        {0,4,8}, {2,4,6}            // Diagonals
    };
    
    for (auto &condition : winConditions) {
        if(spaces[condition[0]] != ' ' &&
        spaces[condition[0]] == spaces[condition[1]] &&
        spaces[condition[1]] == spaces[condition[2]]) {
         
            if (spaces[condition[0]] == player) {
                std::cout << "YOU WIN!\n";
            } else {
                std::cout << "YOU LOSE!\n";
            }
            return true;
         }
    }
    return false;
}

// function to check for a tie due to all spaces being marked
bool checkTie(char *spaces){

    for (int i = 0; i < 9; i++){
        if(spaces[i] == ' '){
            return false;
        }
    }
    std::cout << "IT'S A TIE!\n";
    return true;
}
